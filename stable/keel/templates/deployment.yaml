apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: kube-system
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    kubernetes.io/service-account.name: keel
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
        - name: keel
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/keel"]
          env:
{{- if .Values.polling.enabled }}
            # Enable polling
            - name: POLL
              value: "1"
{{- else }}
            # Disable polling
            - name: POLL
              value: "0"
{{- end }}
{{- if .Values.helmProvider.enabled }}
            # Enable/disable Helm provider
            - name: HELM_PROVIDER
              value: "1"
{{- end }}
{{- if .Values.gcr.enabled }}
            # Enable GCR with pub/sub support
            - name: PROJECT_ID
              value: "{{ .Values.gcr.projectId }}"
            - name: PUBSUB
              value: "1"
{{- end }}
{{- if .Values.webhook.enabled }}
            # Enable webhook endpoint
            - name: WEBHOOK_ENDPOINT
              value: "{{ .Values.webhook.endpoint }}"
{{- end }}
{{- if .Values.slack.enabled }}
            - name: SLACK_TOKEN
              value: "{{ .Values.slack.token }}"
            - name: SLACK_CHANNELS
              value: "{{ .Values.slack.channel }}"
{{- end }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
